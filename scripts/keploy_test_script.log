
       ‚ñì‚ñà‚ñà‚ñì‚ñÑ
    ‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñì‚ñà‚ñì‚ñÑ
     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí
          ‚ñÄ‚ñì‚ñì‚ñà‚ñà‚ñà‚ñÑ      ‚ñÑ‚ñÑ   ‚ñÑ               ‚ñå
         ‚ñÑ‚ñå‚ñå‚ñì‚ñì‚ñà‚ñà‚ñà‚ñà‚ñÑ    ‚ñà‚ñà ‚ñì‚ñà‚ñÄ  ‚ñÑ‚ñå‚ñÄ‚ñÑ  ‚ñì‚ñì‚ñå‚ñÑ   ‚ñì‚ñà  ‚ñÑ‚ñå‚ñì‚ñì‚ñå‚ñÑ ‚ñå‚ñå   ‚ñì
       ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñå‚ñì‚ñì   ‚ñà‚ñà‚ñì‚ñà‚ñÑ  ‚ñì‚ñà‚ñÑ‚ñì‚ñì ‚ñê‚ñà‚ñå  ‚ñà‚ñà ‚ñì‚ñà  ‚ñà‚ñå  ‚ñà‚ñà  ‚ñà‚ñå ‚ñà‚ñì
      ‚ñì‚ñì‚ñì‚ñì‚ñÄ‚ñÄ‚ñÄ‚ñÄ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñå  ‚ñà‚ñà  ‚ñà‚ñì  ‚ñì‚ñå‚ñÑ‚ñÑ ‚ñê‚ñà‚ñì‚ñÑ‚ñì‚ñà‚ñÄ ‚ñà‚ñì‚ñà ‚ñÄ‚ñà‚ñÑ‚ñÑ‚ñà‚ñÄ   ‚ñà‚ñì‚ñà
       ‚ñì‚ñå                           ‚ñê‚ñà‚ñå                   ‚ñà‚ñå
        ‚ñì
  
version: 2.1.0-alpha9

üê∞ Keploy: 2024-05-21T14:09:07+05:30 	[34mINFO[0m	config file not found; proceeding with flags only
üê∞ Keploy: 2024-05-21T14:09:07+05:30 	[33mWARN[0m	Delay is set to 5 seconds, incase your app takes more time to start use --delay to set custom delay
üê∞ Keploy: 2024-05-21T14:09:07+05:30 	[34mINFO[0m	Example usage: keploy test -c "/path/to/user/app" --delay 6
üê∞ Keploy: 2024-05-21T14:09:07+05:30 	[34mINFO[0m	GitHub Actions workflow file generated successfully	{"path": "/githubactions/keploy.yml"}
üê∞ Keploy: 2024-05-21T14:09:07+05:30 	[34mINFO[0m	keploy initialized and probes added to the kernel.
üê∞ Keploy: 2024-05-21T14:09:08+05:30 	[34mINFO[0m	Java detected and CA already exists	{"path": "/usr/lib/jvm/java-11-openjdk-amd64/lib/security/cacerts"}
üê∞ Keploy: 2024-05-21T14:09:08+05:30 	[34mINFO[0m	Java detected and CA already exists	{"path": "/usr/lib/jvm/java-11-openjdk-amd64/lib/security/cacerts"}
üê∞ Keploy: 2024-05-21T14:09:08+05:30 	[34mINFO[0m	Keploy has taken control of the DNS resolution mechanism, your application may misbehave if you have provided wrong domain name in your application code.
üê∞ Keploy: 2024-05-21T14:09:08+05:30 	[34mINFO[0m	starting TCP DNS server at addr :26789
üê∞ Keploy: 2024-05-21T14:09:08+05:30 	[34mINFO[0m	starting UDP DNS server at addr :26789
üê∞ Keploy: 2024-05-21T14:09:08+05:30 	[34mINFO[0m	Proxy started at port:16789
üê∞ Keploy: 2024-05-21T14:09:08+05:30 	[34mINFO[0m	running	{"test-set": "test-set-8"}
üê∞ Keploy: 2024-05-21T14:09:08+05:30 	[34mINFO[0m	running	{"test-set": "test-set-2"}
PID: 112797
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /:param                   --> main.getURL (3 handlers)
[GIN-debug] POST   /url                      --> main.putURL (3 handlers)
üê∞ Keploy: 2024-05-21T14:09:13+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-1", "test set": "test-set-2"}


[31m2024/05/21 14:09:13 [Recovery] 2024/05/21 - 14:09:13 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-1
Postman-Token: f90f8467-37e9-4660-9bf6-903ffe17a8ba
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:13 | 500 |    3.999334ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-1[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:13+05:30 	[34mINFO[0m	result	{"testcase id": "test-1", "testset id": "test-set-2", "passed": "true"}
üê∞ Keploy: 2024-05-21T14:09:13+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-2", "test set": "test-set-2"}


[31m2024/05/21 14:09:13 [Recovery] 2024/05/21 - 14:09:13 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-2
Postman-Token: 64b9b3ef-0ad1-4a71-a92c-8100a77ed846
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:13 | 500 |    1.931912ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-2[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:13+05:30 	[34mINFO[0m	result	{"testcase id": "test-2", "testset id": "test-set-2", "passed": "true"}
üê∞ Keploy: 2024-05-21T14:09:13+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-3", "test set": "test-set-2"}


[31m2024/05/21 14:09:13 [Recovery] 2024/05/21 - 14:09:13 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-3
Postman-Token: 5476293e-c8ed-4263-b4e2-ec0de8d18026
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:13 | 500 |    1.218987ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-3[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:13+05:30 	[34mINFO[0m	result	{"testcase id": "test-3", "testset id": "test-set-2", "passed": "true"}

 <=========================================> 
  TESTRUN SUMMARY. For test-set: [32m[1m"[0m[32mtest-set-2[0m[32m[1m"[0m
	Total tests: [34m[1m3[0m
	Total test passed: [34m[1m3[0m
	Total test failed: [34m[1m0[0m
 <=========================================> 

{"level":"info","ts":1716280753.7331257,"caller":"gin-mongo/main.go:71","msg":"server exiting"}
2024/05/21 14:09:13 sync /dev/stderr: invalid argument
üê∞ Keploy: 2024-05-21T14:09:13+05:30 	[34mINFO[0m	running	{"test-set": "test-set-5"}
üê∞ Keploy: 2024-05-21T14:09:13+05:30 	[34mINFO[0m	running	{"test-set": "test-set-9"}
üê∞ Keploy: 2024-05-21T14:09:13+05:30 	[34mINFO[0m	running	{"test-set": "test-set-1"}
PID: 113107
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /:param                   --> main.getURL (3 handlers)
[GIN-debug] POST   /url                      --> main.putURL (3 handlers)
üê∞ Keploy: 2024-05-21T14:09:18+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-1", "test set": "test-set-1"}


[31m2024/05/21 14:09:18 [Recovery] 2024/05/21 - 14:09:18 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-1
Postman-Token: d4aa25d5-b0bc-4345-baa1-bcf40254f9b9
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:18 | 500 |    5.111397ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-1[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:18+05:30 	[34mINFO[0m	result	{"testcase id": "test-1", "testset id": "test-set-1", "passed": "true"}
üê∞ Keploy: 2024-05-21T14:09:18+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-2", "test set": "test-set-1"}


[31m2024/05/21 14:09:18 [Recovery] 2024/05/21 - 14:09:18 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-2
Postman-Token: 8264abb4-5948-4e70-8aa3-4ddf714d82a7
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:18 | 500 |      4.1555ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-2[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:18+05:30 	[34mINFO[0m	result	{"testcase id": "test-2", "testset id": "test-set-1", "passed": "true"}

 <=========================================> 
  TESTRUN SUMMARY. For test-set: [32m[1m"[0m[32mtest-set-1[0m[32m[1m"[0m
	Total tests: [34m[1m2[0m
	Total test passed: [34m[1m2[0m
	Total test failed: [34m[1m0[0m
 <=========================================> 

{"level":"info","ts":1716280758.7914393,"caller":"gin-mongo/main.go:71","msg":"server exiting"}
2024/05/21 14:09:18 sync /dev/stderr: invalid argument
üê∞ Keploy: 2024-05-21T14:09:18+05:30 	[34mINFO[0m	running	{"test-set": "test-set-3"}
PID: 113406
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /:param                   --> main.getURL (3 handlers)
[GIN-debug] POST   /url                      --> main.putURL (3 handlers)
üê∞ Keploy: 2024-05-21T14:09:23+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-1", "test set": "test-set-3"}


[31m2024/05/21 14:09:23 [Recovery] 2024/05/21 - 14:09:23 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-1
Postman-Token: c2b11d07-4e88-4885-ab47-263ba31206b3
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:23 | 500 |    4.549013ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-1[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:23+05:30 	[34mINFO[0m	result	{"testcase id": "test-1", "testset id": "test-set-3", "passed": "true"}
üê∞ Keploy: 2024-05-21T14:09:23+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-2", "test set": "test-set-3"}


[31m2024/05/21 14:09:23 [Recovery] 2024/05/21 - 14:09:23 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-2
Postman-Token: adb5fb5b-271d-4cf3-a72e-270f68ef1caf
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:23 | 500 |    2.204263ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-2[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:23+05:30 	[34mINFO[0m	result	{"testcase id": "test-2", "testset id": "test-set-3", "passed": "true"}

 <=========================================> 
  TESTRUN SUMMARY. For test-set: [32m[1m"[0m[32mtest-set-3[0m[32m[1m"[0m
	Total tests: [34m[1m2[0m
	Total test passed: [34m[1m2[0m
	Total test failed: [34m[1m0[0m
 <=========================================> 

{"level":"info","ts":1716280763.8370328,"caller":"gin-mongo/main.go:71","msg":"server exiting"}
2024/05/21 14:09:23 sync /dev/stderr: invalid argument
üê∞ Keploy: 2024-05-21T14:09:23+05:30 	[34mINFO[0m	running	{"test-set": "test-set-6"}
PID: 113633
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /:param                   --> main.getURL (3 handlers)
[GIN-debug] POST   /url                      --> main.putURL (3 handlers)
üê∞ Keploy: 2024-05-21T14:09:28+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-1", "test set": "test-set-6"}


[31m2024/05/21 14:09:28 [Recovery] 2024/05/21 - 14:09:28 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-1
Postman-Token: afc775e4-8494-47a6-b71a-ae42f9cfbf15
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:28 | 500 |    4.134197ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-1[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:28+05:30 	[34mINFO[0m	result	{"testcase id": "test-1", "testset id": "test-set-6", "passed": "true"}
üê∞ Keploy: 2024-05-21T14:09:28+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-2", "test set": "test-set-6"}


[31m2024/05/21 14:09:28 [Recovery] 2024/05/21 - 14:09:28 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-2
Postman-Token: c0adee43-0f44-46e9-8dbc-392997d4031f
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:28 | 500 |    2.277119ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-2[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:28+05:30 	[34mINFO[0m	result	{"testcase id": "test-2", "testset id": "test-set-6", "passed": "true"}

 <=========================================> 
  TESTRUN SUMMARY. For test-set: [32m[1m"[0m[32mtest-set-6[0m[32m[1m"[0m
	Total tests: [34m[1m2[0m
	Total test passed: [34m[1m2[0m
	Total test failed: [34m[1m0[0m
 <=========================================> 

{"level":"info","ts":1716280768.8936512,"caller":"gin-mongo/main.go:71","msg":"server exiting"}
2024/05/21 14:09:28 sync /dev/stderr: invalid argument
üê∞ Keploy: 2024-05-21T14:09:28+05:30 	[34mINFO[0m	running	{"test-set": "test-set-7"}
üê∞ Keploy: 2024-05-21T14:09:28+05:30 	[34mINFO[0m	running	{"test-set": "test-set-0"}
PID: 113902
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /:param                   --> main.getURL (3 handlers)
[GIN-debug] POST   /url                      --> main.putURL (3 handlers)
üê∞ Keploy: 2024-05-21T14:09:33+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-1", "test set": "test-set-0"}


[31m2024/05/21 14:09:33 [Recovery] 2024/05/21 - 14:09:33 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-1
Postman-Token: 0f1dcc78-5e6b-41b3-a10c-ec4b7e8576b3
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:33 | 500 |    5.496295ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-1[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:33+05:30 	[34mINFO[0m	result	{"testcase id": "test-1", "testset id": "test-set-0", "passed": "true"}
üê∞ Keploy: 2024-05-21T14:09:33+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-2", "test set": "test-set-0"}


[31m2024/05/21 14:09:33 [Recovery] 2024/05/21 - 14:09:33 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-2
Postman-Token: 7ca36e92-40aa-4b3a-967a-a794085dd80b
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:33 | 500 |    4.591014ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-2[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:33+05:30 	[34mINFO[0m	result	{"testcase id": "test-2", "testset id": "test-set-0", "passed": "true"}

 <=========================================> 
  TESTRUN SUMMARY. For test-set: [32m[1m"[0m[32mtest-set-0[0m[32m[1m"[0m
	Total tests: [34m[1m2[0m
	Total test passed: [34m[1m2[0m
	Total test failed: [34m[1m0[0m
 <=========================================> 

{"level":"info","ts":1716280773.9681592,"caller":"gin-mongo/main.go:71","msg":"server exiting"}
2024/05/21 14:09:33 sync /dev/stderr: invalid argument
üê∞ Keploy: 2024-05-21T14:09:33+05:30 	[34mINFO[0m	running	{"test-set": "test-set-4"}
PID: 114150
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /:param                   --> main.getURL (3 handlers)
[GIN-debug] POST   /url                      --> main.putURL (3 handlers)
üê∞ Keploy: 2024-05-21T14:09:38+05:30 	[34mINFO[0m	starting test for of	{"test case": "test-1", "test set": "test-set-4"}


[31m2024/05/21 14:09:38 [Recovery] 2024/05/21 - 14:09:38 panic recovered:
GET /url HTTP/1.1
Host: localhost:8080
Accept: */*
Accept-Encoding: gzip
Accept-Encoding: deflate
Accept-Encoding: br
Connection: keep-alive
Keploy-Test-Id: test-1
Postman-Token: 1acd92a5-3337-4442-b1a4-65d2c19b126c
User-Agent: PostmanRuntime/7.37.3


runtime error: invalid memory address or nil pointer dereference
/usr/local/go/src/runtime/panic.go:261 (0x451db7)
	panicmem: panic(memoryError)
/usr/local/go/src/runtime/signal_unix.go:881 (0x451d85)
	sigpanic: panicmem()
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:268 (0x8fbe05)
	(*Logger).check: if lvl < zapcore.DPanicLevel && !log.core.Enabled(lvl) {
/home/akash/go/pkg/mod/go.uber.org/zap@v1.19.1/logger.go:207 (0x8fbc77)
	(*Logger).Error: if ce := log.check(ErrorLevel, msg); ce != nil {
/home/akash/Desktop/samples-go/gin-mongo/handler.go:61 (0x90052f)
	getURL: logger.Error("failed to find url in the database", zap.Error(err), zap.String("hash", hash))
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x789df9)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/recovery.go:99 (0x789de7)
	CustomRecoveryWithWriter.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x788f7c)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/logger.go:241 (0x788f63)
	LoggerWithConfig.func1: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/context.go:168 (0x7884cd)
	(*Context).Next: c.handlers[c.index](c)
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:555 (0x78815c)
	(*Engine).handleHTTPRequest: c.Next()
/home/akash/go/pkg/mod/github.com/gin-gonic/gin@v1.7.7/gin.go:511 (0x787de6)
	(*Engine).ServeHTTP: engine.handleHTTPRequest(c)
/usr/local/go/src/net/http/server.go:3137 (0x67e04d)
	serverHandler.ServeHTTP: handler.ServeHTTP(rw, req)
/usr/local/go/src/net/http/server.go:2039 (0x67a1a7)
	(*conn).serve: serverHandler{c.server}.ServeHTTP(w, w.req)
/usr/local/go/src/runtime/asm_amd64.s:1695 (0x46f880)
	goexit: BYTE	$0x90	// NOP
[0m
[GIN] 2024/05/21 - 14:09:38 | 500 |    3.356966ms |             ::1 | GET      "/url"
Testrun passed for testcase with id: [32m[1m"[0m[32mtest-1[0m[32m[1m"[0m

--------------------------------------------------------------------

üê∞ Keploy: 2024-05-21T14:09:38+05:30 	[34mINFO[0m	result	{"testcase id": "test-1", "testset id": "test-set-4", "passed": "true"}

 <=========================================> 
  TESTRUN SUMMARY. For test-set: [32m[1m"[0m[32mtest-set-4[0m[32m[1m"[0m
	Total tests: [34m[1m1[0m
	Total test passed: [34m[1m1[0m
	Total test failed: [34m[1m0[0m
 <=========================================> 

{"level":"info","ts":1716280779.0104282,"caller":"gin-mongo/main.go:71","msg":"server exiting"}
2024/05/21 14:09:39 sync /dev/stderr: invalid argument

 <=========================================> 
  COMPLETE TESTRUN SUMMARY. 
	Total tests: [34m[1m12[0m
	Total test passed: [34m[1m12[0m
	Total test failed: [34m[1m0[0m

	Test Suite Name		Total Test	Passed		Failed	

	[32m[1m"[0m[32mtest-set-0[0m[32m[1m"[0m		[34m[1m2[0m		[34m[1m2[0m		[34m[1m0[0m
	[32m[1m"[0m[32mtest-set-1[0m[32m[1m"[0m		[34m[1m2[0m		[34m[1m2[0m		[34m[1m0[0m
	[32m[1m"[0m[32mtest-set-2[0m[32m[1m"[0m		[34m[1m3[0m		[34m[1m3[0m		[34m[1m0[0m
	[32m[1m"[0m[32mtest-set-3[0m[32m[1m"[0m		[34m[1m2[0m		[34m[1m2[0m		[34m[1m0[0m
	[32m[1m"[0m[32mtest-set-4[0m[32m[1m"[0m		[34m[1m1[0m		[34m[1m1[0m		[34m[1m0[0m
	[32m[1m"[0m[32mtest-set-6[0m[32m[1m"[0m		[34m[1m2[0m		[34m[1m2[0m		[34m[1m0[0m
<=========================================> 

üê∞ Keploy: 2024-05-21T14:09:39+05:30 	[34mINFO[0m	test run completed	{"passed overall": true}
üê∞ Keploy: 2024-05-21T14:09:39+05:30 	[34mINFO[0m	stopping Keploy	{"reason": "replay completed successfully"}
üê∞ Keploy: 2024-05-21T14:09:39+05:30 	[34mINFO[0m	proxy stopped...
üê∞ Keploy: 2024-05-21T14:09:40+05:30 	[34mINFO[0m	eBPF resources released successfully...
